@wire(text-editor-inner {
  {
    env:shell-server-url | If(IsNone {"http://localhost:6666"} {ExpectString}) >= shell-server-url
    "/text_editor" | AppendTo(shell-server-url)
  }
  ToJson | Http.Post(shell-server-url Timeout: 30)
})

@wire(text_editor {
  Do(text-editor-inner)
})

{
  definition: {
    name: "text_editor"
    
    description: """Custom editing tool for viewing, creating and editing files
* State is persistent across command calls and discussions with the user
* If `path` is a file, `view` displays the result of applying `cat -n`. If `path` is a directory, `view` lists non-hidden files and directories up to 2 levels deep
* The `create` command cannot be used if the specified `path` already exists as a file
* If a `command` generates a long output, it will be truncated and marked with `<response clipped>`
* The `undo_edit` command will revert the last edit made to the file at `path`

Choosing between `str_replace` and `insert`:
* For simple text files with unique content: Use `str_replace` with exact matching
* For structured files (XML, JSON, PLIST): Use `insert` with line numbers for precise control
* For complex changes: Use `view` to find line numbers, then `insert` for reliable modifications

Notes for using the `str_replace` command:
* Use only for files where the target text appears exactly once
* The `old_str` must match uniquely - if multiple matches exist, use `insert` instead
* Best for simple replacements in unstructured text files
* The `new_str` parameter contains the replacement content
"""
    parameters: {
      type: "object"
      properties: {
        command: {
          description: "The commands to run. Allowed options are: `view`, `create`, `str_replace`, `insert`, `undo_edit`."
          enum: ["view" "create" "str_replace" "insert" "undo_edit"]
          type: "string"
        }
        file_text: {
          description: "Required parameter of `create` command, with the content of the file to be created."
          type: "string"
        }
        insert_line: {
          description: "Required parameter of `insert` command. The `new_str` will be inserted AFTER the line `insert_line` of `path`."
          type: "integer"
        }
        new_str: {
          description: "Optional parameter of `str_replace` command containing the new string (if not given, no string will be added). Required parameter of `insert` command containing the string to insert."
          type: "string"
        }
        old_str: {
          description: "Required parameter of `str_replace` command containing the string in `path` to replace. Must match exactly one location in the file."
          type: "string"
        }
        path: {
          description: "Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`."
          type: "string"
        }
        view_range: {
          description: "Optional parameter of `view` command when `path` points to a file. If none is given, the full file is shown. If provided, the file will be shown in the indicated line number range, e.g. [11, 12] will show lines 11 and 12. Indexing at 1 to start. Setting `[start_line, -1]` shows all lines from `start_line` to the end of the file."
          items: {"type": "integer"}
          type: "array"
        }
      }
      required: ["command" "path"]
    }
  }
  
  use: text_editor
}
